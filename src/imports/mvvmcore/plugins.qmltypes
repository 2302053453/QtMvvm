import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable de.skycoder42.QtMvvm.Core 1.1'

Module {
    dependencies: ["QtQml 2.2"]
    Component {
        name: "QtMvvm::MessageConfig"
        exports: ["de.skycoder42.QtMvvm.Core/MessageConfig 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "StandardButtons"
            values: {
                "NoButton": 0,
                "Ok": 1024,
                "Save": 2048,
                "SaveAll": 4096,
                "Open": 8192,
                "Yes": 16384,
                "YesToAll": 32768,
                "No": 65536,
                "NoToAll": 131072,
                "Abort": 262144,
                "Retry": 524288,
                "Ignore": 1048576,
                "Close": 2097152,
                "Cancel": 4194304,
                "Discard": 8388608,
                "Help": 16777216,
                "Apply": 33554432,
                "Reset": 67108864,
                "RestoreDefaults": 134217728
            }
        }
        Property { name: "type"; type: "QByteArray" }
        Property { name: "subType"; type: "QByteArray" }
        Property { name: "title"; type: "string" }
        Property { name: "text"; type: "string" }
        Property { name: "buttons"; type: "StandardButtons" }
        Property { name: "buttonTexts"; type: "QVariantMap" }
        Property { name: "defaultValue"; type: "QVariant" }
        Property { name: "viewProperties"; type: "QVariantMap" }
    }
    Component {
        name: "QtMvvm::MessageResult"
        prototype: "QObject"
        exports: ["de.skycoder42.QtMvvm.Core/MessageResult 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "result"; type: "QVariant" }
        Property { name: "autoDelete"; type: "bool" }
        Signal {
            name: "dialogDone"
            Parameter { name: "button"; type: "QtMvvm::MessageConfig::StandardButton" }
        }
        Signal {
            name: "autoDeleteChanged"
            Parameter { name: "autoDelete"; type: "bool" }
        }
        Method { name: "discardMessage" }
        Method {
            name: "setResult"
            Parameter { name: "result"; type: "QVariant" }
        }
        Method {
            name: "setAutoDelete"
            Parameter { name: "autoDelete"; type: "bool" }
        }
        Method {
            name: "setCloseTarget"
            Parameter { name: "closeObject"; type: "QObject"; isPointer: true }
            Parameter { name: "closeMethod"; type: "string" }
        }
        Method {
            name: "setCloseTarget"
            Parameter { name: "closeObject"; type: "QObject"; isPointer: true }
            Parameter { name: "closeMethod"; type: "QMetaMethod" }
        }
        Method {
            name: "complete"
            Parameter { name: "button"; type: "QtMvvm::MessageConfig::StandardButton" }
        }
        Method {
            name: "complete"
            Parameter { name: "button"; type: "QtMvvm::MessageConfig::StandardButton" }
            Parameter { name: "result"; type: "QVariant" }
        }
    }
    Component {
        name: "QtMvvm::QQmlMvvmBinding"
        prototype: "QObject"
        exports: ["de.skycoder42.QtMvvm.Core/MvvmBinding 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "BindingDirection"
            values: {
                "SingleInit": 1,
                "OneWayToView": 3,
                "OneWayToViewModel": 4,
                "TwoWay": 7
            }
        }
        Property { name: "viewModel"; type: "QObject"; isPointer: true }
        Property { name: "viewModelProperty"; type: "string" }
        Property { name: "view"; type: "QObject"; isPointer: true }
        Property { name: "viewProperty"; type: "string" }
        Property { name: "viewModelChangeSignal"; type: "string" }
        Property { name: "viewChangeSignal"; type: "string" }
        Property { name: "type"; type: "BindingDirection" }
        Signal {
            name: "viewModelChanged"
            Parameter { name: "viewModel"; type: "QObject"; isPointer: true }
        }
        Signal {
            name: "viewModelPropertyChanged"
            Parameter { name: "viewModelProperty"; type: "string" }
        }
        Signal {
            name: "viewChanged"
            Parameter { name: "view"; type: "QObject"; isPointer: true }
        }
        Signal {
            name: "viewPropertyChanged"
            Parameter { name: "viewProperty"; type: "string" }
        }
        Signal {
            name: "typeChanged"
            Parameter { name: "type"; type: "BindingDirection" }
        }
        Signal {
            name: "viewModelChangeSignalChanged"
            Parameter { name: "viewModelChangeSignal"; type: "string" }
        }
        Signal {
            name: "viewChangeSignalChanged"
            Parameter { name: "viewChangeSignal"; type: "string" }
        }
        Method {
            name: "setType"
            Parameter { name: "type"; type: "BindingDirection" }
        }
        Method { name: "unbind" }
        Method { name: "isValid"; type: "bool" }
    }
    Component {
        name: "QtMvvm::QQmlMvvmMessage"
        prototype: "QObject"
        exports: ["de.skycoder42.QtMvvm.Core/Message 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Method {
            name: "information"
            Parameter { name: "title"; type: "string" }
            Parameter { name: "text"; type: "string" }
            Parameter { name: "onResult"; type: "QJSValue" }
            Parameter { name: "okText"; type: "string" }
        }
        Method {
            name: "information"
            Parameter { name: "title"; type: "string" }
            Parameter { name: "text"; type: "string" }
            Parameter { name: "onResult"; type: "QJSValue" }
        }
        Method {
            name: "information"
            Parameter { name: "title"; type: "string" }
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "question"
            Parameter { name: "title"; type: "string" }
            Parameter { name: "text"; type: "string" }
            Parameter { name: "onResult"; type: "QJSValue" }
            Parameter { name: "yesText"; type: "string" }
            Parameter { name: "noText"; type: "string" }
        }
        Method {
            name: "question"
            Parameter { name: "title"; type: "string" }
            Parameter { name: "text"; type: "string" }
            Parameter { name: "onResult"; type: "QJSValue" }
            Parameter { name: "yesText"; type: "string" }
        }
        Method {
            name: "question"
            Parameter { name: "title"; type: "string" }
            Parameter { name: "text"; type: "string" }
            Parameter { name: "onResult"; type: "QJSValue" }
        }
        Method {
            name: "question"
            Parameter { name: "title"; type: "string" }
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "warning"
            Parameter { name: "title"; type: "string" }
            Parameter { name: "text"; type: "string" }
            Parameter { name: "onResult"; type: "QJSValue" }
            Parameter { name: "okText"; type: "string" }
        }
        Method {
            name: "warning"
            Parameter { name: "title"; type: "string" }
            Parameter { name: "text"; type: "string" }
            Parameter { name: "onResult"; type: "QJSValue" }
        }
        Method {
            name: "warning"
            Parameter { name: "title"; type: "string" }
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "critical"
            Parameter { name: "title"; type: "string" }
            Parameter { name: "text"; type: "string" }
            Parameter { name: "onResult"; type: "QJSValue" }
            Parameter { name: "okText"; type: "string" }
        }
        Method {
            name: "critical"
            Parameter { name: "title"; type: "string" }
            Parameter { name: "text"; type: "string" }
            Parameter { name: "onResult"; type: "QJSValue" }
        }
        Method {
            name: "critical"
            Parameter { name: "title"; type: "string" }
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "about"
            Parameter { name: "description"; type: "string" }
            Parameter { name: "websiteUrl"; type: "QUrl" }
            Parameter { name: "licenseName"; type: "string" }
            Parameter { name: "licenseUrl"; type: "QUrl" }
            Parameter { name: "companyName"; type: "string" }
            Parameter { name: "addQtVersion"; type: "bool" }
            Parameter { name: "extraTopInfos"; type: "QStringList" }
            Parameter { name: "extraBottomInfos"; type: "string" }
        }
        Method {
            name: "about"
            Parameter { name: "description"; type: "string" }
            Parameter { name: "websiteUrl"; type: "QUrl" }
            Parameter { name: "licenseName"; type: "string" }
            Parameter { name: "licenseUrl"; type: "QUrl" }
            Parameter { name: "companyName"; type: "string" }
            Parameter { name: "addQtVersion"; type: "bool" }
            Parameter { name: "extraTopInfos"; type: "QStringList" }
        }
        Method {
            name: "about"
            Parameter { name: "description"; type: "string" }
            Parameter { name: "websiteUrl"; type: "QUrl" }
            Parameter { name: "licenseName"; type: "string" }
            Parameter { name: "licenseUrl"; type: "QUrl" }
            Parameter { name: "companyName"; type: "string" }
            Parameter { name: "addQtVersion"; type: "bool" }
        }
        Method {
            name: "about"
            Parameter { name: "description"; type: "string" }
            Parameter { name: "websiteUrl"; type: "QUrl" }
            Parameter { name: "licenseName"; type: "string" }
            Parameter { name: "licenseUrl"; type: "QUrl" }
            Parameter { name: "companyName"; type: "string" }
        }
        Method {
            name: "about"
            Parameter { name: "description"; type: "string" }
            Parameter { name: "websiteUrl"; type: "QUrl" }
            Parameter { name: "licenseName"; type: "string" }
            Parameter { name: "licenseUrl"; type: "QUrl" }
        }
        Method {
            name: "about"
            Parameter { name: "description"; type: "string" }
            Parameter { name: "websiteUrl"; type: "QUrl" }
            Parameter { name: "licenseName"; type: "string" }
        }
        Method {
            name: "about"
            Parameter { name: "description"; type: "string" }
            Parameter { name: "websiteUrl"; type: "QUrl" }
        }
        Method {
            name: "about"
            Parameter { name: "description"; type: "string" }
        }
        Method {
            name: "getInput"
            Parameter { name: "title"; type: "string" }
            Parameter { name: "text"; type: "string" }
            Parameter { name: "inputType"; type: "string" }
            Parameter { name: "onResult"; type: "QJSValue" }
            Parameter { name: "defaultValue"; type: "QVariant" }
            Parameter { name: "viewProperties"; type: "QVariantMap" }
            Parameter { name: "okText"; type: "string" }
            Parameter { name: "cancelText"; type: "string" }
        }
        Method {
            name: "getInput"
            Parameter { name: "title"; type: "string" }
            Parameter { name: "text"; type: "string" }
            Parameter { name: "inputType"; type: "string" }
            Parameter { name: "onResult"; type: "QJSValue" }
            Parameter { name: "defaultValue"; type: "QVariant" }
            Parameter { name: "viewProperties"; type: "QVariantMap" }
            Parameter { name: "okText"; type: "string" }
        }
        Method {
            name: "getInput"
            Parameter { name: "title"; type: "string" }
            Parameter { name: "text"; type: "string" }
            Parameter { name: "inputType"; type: "string" }
            Parameter { name: "onResult"; type: "QJSValue" }
            Parameter { name: "defaultValue"; type: "QVariant" }
            Parameter { name: "viewProperties"; type: "QVariantMap" }
        }
        Method {
            name: "getInput"
            Parameter { name: "title"; type: "string" }
            Parameter { name: "text"; type: "string" }
            Parameter { name: "inputType"; type: "string" }
            Parameter { name: "onResult"; type: "QJSValue" }
            Parameter { name: "defaultValue"; type: "QVariant" }
        }
        Method {
            name: "getInput"
            Parameter { name: "title"; type: "string" }
            Parameter { name: "text"; type: "string" }
            Parameter { name: "inputType"; type: "string" }
            Parameter { name: "onResult"; type: "QJSValue" }
        }
        Method {
            name: "getInput"
            Parameter { name: "title"; type: "string" }
            Parameter { name: "text"; type: "string" }
            Parameter { name: "inputType"; type: "string" }
        }
        Method {
            name: "getExistingDirectory"
            Parameter { name: "onResult"; type: "QJSValue" }
            Parameter { name: "title"; type: "string" }
            Parameter { name: "dir"; type: "QUrl" }
        }
        Method {
            name: "getExistingDirectory"
            Parameter { name: "onResult"; type: "QJSValue" }
            Parameter { name: "title"; type: "string" }
        }
        Method {
            name: "getExistingDirectory"
            Parameter { name: "onResult"; type: "QJSValue" }
        }
        Method { name: "getExistingDirectory" }
        Method {
            name: "getOpenFile"
            Parameter { name: "onResult"; type: "QJSValue" }
            Parameter { name: "title"; type: "string" }
            Parameter { name: "supportedMimeTypes"; type: "QStringList" }
            Parameter { name: "dir"; type: "QUrl" }
        }
        Method {
            name: "getOpenFile"
            Parameter { name: "onResult"; type: "QJSValue" }
            Parameter { name: "title"; type: "string" }
            Parameter { name: "supportedMimeTypes"; type: "QStringList" }
        }
        Method {
            name: "getOpenFile"
            Parameter { name: "onResult"; type: "QJSValue" }
            Parameter { name: "title"; type: "string" }
        }
        Method {
            name: "getOpenFile"
            Parameter { name: "onResult"; type: "QJSValue" }
        }
        Method { name: "getOpenFile" }
        Method {
            name: "getOpenFiles"
            Parameter { name: "onResult"; type: "QJSValue" }
            Parameter { name: "title"; type: "string" }
            Parameter { name: "supportedMimeTypes"; type: "QStringList" }
            Parameter { name: "dir"; type: "QUrl" }
        }
        Method {
            name: "getOpenFiles"
            Parameter { name: "onResult"; type: "QJSValue" }
            Parameter { name: "title"; type: "string" }
            Parameter { name: "supportedMimeTypes"; type: "QStringList" }
        }
        Method {
            name: "getOpenFiles"
            Parameter { name: "onResult"; type: "QJSValue" }
            Parameter { name: "title"; type: "string" }
        }
        Method {
            name: "getOpenFiles"
            Parameter { name: "onResult"; type: "QJSValue" }
        }
        Method {
            name: "getSaveFile"
            Parameter { name: "onResult"; type: "QJSValue" }
            Parameter { name: "title"; type: "string" }
            Parameter { name: "supportedMimeTypes"; type: "QStringList" }
            Parameter { name: "dir"; type: "QUrl" }
        }
        Method {
            name: "getSaveFile"
            Parameter { name: "onResult"; type: "QJSValue" }
            Parameter { name: "title"; type: "string" }
            Parameter { name: "supportedMimeTypes"; type: "QStringList" }
        }
        Method {
            name: "getSaveFile"
            Parameter { name: "onResult"; type: "QJSValue" }
            Parameter { name: "title"; type: "string" }
        }
        Method {
            name: "getSaveFile"
            Parameter { name: "onResult"; type: "QJSValue" }
        }
    }
    Component {
        name: "QtMvvm::QQmlServiceRegistry"
        prototype: "QObject"
        exports: ["de.skycoder42.QtMvvm.Core/ServiceRegistry 1.1"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Enum {
            name: "DestructionScope"
            values: {
                "DestroyOnAppQuit": 1,
                "DestroyOnAppDestroy": 2,
                "DestroyOnRegistryDestroy": 3,
                "DestroyNever": 127
            }
        }
        Method {
            name: "isRegistered"
            type: "bool"
            Parameter { name: "iid"; type: "string" }
        }
        Method {
            name: "registerObject"
            Parameter { name: "object"; type: "QObject"; isPointer: true }
            Parameter { name: "scope"; type: "QtMvvm::QQmlServiceRegistry::DestructionScope" }
            Parameter { name: "weak"; type: "bool" }
        }
        Method {
            name: "registerObject"
            Parameter { name: "object"; type: "QObject"; isPointer: true }
            Parameter { name: "scope"; type: "QtMvvm::QQmlServiceRegistry::DestructionScope" }
        }
        Method {
            name: "registerObject"
            Parameter { name: "object"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "registerObject"
            Parameter { name: "iid"; type: "string" }
            Parameter { name: "function"; type: "QJSValue" }
            Parameter { name: "weak"; type: "bool" }
        }
        Method {
            name: "registerObject"
            Parameter { name: "iid"; type: "string" }
            Parameter { name: "function"; type: "QJSValue" }
        }
        Method {
            name: "registerObject"
            Parameter { name: "componentUrl"; type: "QUrl" }
            Parameter { name: "weak"; type: "bool" }
        }
        Method {
            name: "registerObject"
            Parameter { name: "componentUrl"; type: "QUrl" }
        }
        Method {
            name: "service"
            type: "QObject*"
            Parameter { name: "iid"; type: "string" }
        }
    }
    Component {
        name: "QtMvvm::SettingsViewModel"
        prototype: "QtMvvm::ViewModel"
        exports: ["de.skycoder42.QtMvvm.Core/SettingsViewModel 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "canRestoreDefaults"; type: "bool"; isReadonly: true }
        Property { name: "restoreConfig"; type: "QtMvvm::MessageConfig"; isReadonly: true }
        Property { name: "settingsSetupLoader"; type: "QtMvvm::ISettingsSetupLoader"; isPointer: true }
        Property { name: "__qtmvvm_inject_settingsSetupLoader"; type: "QByteArray"; isReadonly: true }
        Signal {
            name: "settingsSetupLoaderChanged"
            Parameter { name: "settingsSetupLoader"; type: "QtMvvm::ISettingsSetupLoader"; isPointer: true }
        }
        Signal { name: "beginLoadSetup" }
        Signal {
            name: "valueChanged"
            revision: 1
            Parameter { name: "key"; type: "string" }
        }
        Signal { name: "resetAccepted"; revision: 1 }
        Method {
            name: "callAction"
            Parameter { name: "key"; type: "string" }
            Parameter { name: "parameters"; type: "QVariantMap" }
        }
        Method {
            name: "setSettingsSetupLoader"
            Parameter { name: "settingsSetupLoader"; type: "QtMvvm::ISettingsSetupLoader"; isPointer: true }
        }
        Method {
            name: "loadValue"
            type: "QVariant"
            Parameter { name: "key"; type: "string" }
            Parameter { name: "defaultValue"; type: "QVariant" }
        }
        Method {
            name: "loadValue"
            type: "QVariant"
            Parameter { name: "key"; type: "string" }
        }
        Method {
            name: "saveValue"
            Parameter { name: "key"; type: "string" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "resetValue"
            Parameter { name: "key"; type: "string" }
        }
        Method {
            name: "resetAll"
            revision: 1
            Parameter { name: "setup"; type: "SettingsElements::Setup" }
        }
    }
    Component {
        name: "QtMvvm::ViewModel"
        prototype: "QObject"
        exports: ["de.skycoder42.QtMvvm.Core/ViewModel 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Signal {
            name: "resultReady"
            Parameter { name: "result"; type: "QVariant" }
        }
        Method {
            name: "onInit"
            Parameter { name: "params"; type: "QVariantHash" }
        }
        Method {
            name: "onResult"
            Parameter { name: "requestCode"; type: "uint" }
            Parameter { name: "result"; type: "QVariant" }
        }
    }
}
